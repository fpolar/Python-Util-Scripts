//Version 1.3.5
//Added Added file format text field and saving subdirectory status to settings

global string $src_img_dir = "";
global string $out_mov_dir = "";
global string $ffmpeg_dir = "";
global string $img_names = "f%d.tif";
global string $sub_dir_cb[];
global string $sub_dir_tf[];

global proc setFileFormat () 
{
	global string $img_names;
	$img_names = `textField -q -text file_format_field`;
}

global proc setImageName (string $src_text_field) 
{
	global string $src_img_dir;
	$src_img_dir = `textField -q -text source_field`;
}

global proc setFFmpeg () 
{
	global string $ffmpeg_dir;
	$ffmpeg_dir = `textField -q -text ffmpeg_field`;
}

global proc browseFFmpeg () 
{
	string $filenames[] = `fileDialog2 -rf true -fm 1`;
	textField -edit -text $filenames[0] ffmpeg_field;
	setFFmpeg();
}
global proc setSource () 
{
	global string $src_img_dir;
	$src_img_dir = `textField -q -text source_field`;
}

global proc browseSource () 
{
	string $filenames[] = `fileDialog2 -rf true -fm 3`;
	textField -edit -text $filenames[0] source_field;
	setSource();
}

global proc setOutput () 
{
	global string $out_mov_dir;
	$out_mov_dir = `textField -q -text output_field`;
}

global proc browseOutput () 
{
	string $filenames[] = `fileDialog2 -rf true -fm 3`;
	textField -edit -text $filenames[0] output_field;
	setOutput();
}

global proc FFMpegSewWindow () 
{
	if (`window -exists "FFMpegSewWindow"`) deleteUI "FFMpegSewWindow";
	window -menuBar true -title "FFMpegSewWindow" -widthHeight 300 750 FFMpegSewWindow;
	menu -label "Settings" -tearOff false;
	    menuItem -label "Load Settings" -c ReadSettings;
	    menuItem -label "Save Settings" -c WriteSettings;

	global string $src_img_dir;
	global string $out_mov_dir;
	global string $ffmpeg_dir;
	global string $img_names;
	$src_img_dir = ("" + `workspace -expandName "images"`);
	$out_mov_dir = ("" + `workspace -expandName "output"`);
	$ffmpeg_dir = ("" + `workspace -expandName "scripts/ffmpeg.exe"`);
	global string $sub_dir_cb[];
	global string $sub_dir_tf[];
	$sub_dir_cb = {};
	$sub_dir_tf = {};

	formLayout -numberOfDivisions 100 ffmpeg_form;

	text -w 100 ("Project: " + (basenameEx (`workspace -q -rd`)));

	radioButtonGrp
		-numberOfRadioButtons 2
		-label "OS:        "
		-labelArray2 "PC" "MAC"
		-select 1
		-columnWidth 1 50
		-columnWidth 2 100
		-columnWidth 2 100
	myRadBtnGrp;

	rowLayout -numberOfColumns 3 
	    -adjustableColumn true
	    -columnAlign  1 "left"
	    -columnAlign  2 "right"
		-columnWidth 1 60
		-columnWidth 2 110
	    ffmpeg_row;
		text -label "ffmpeg loc";
		textField -tx $ffmpeg_dir -changeCommand setFFmpeg ffmpeg_field;
		button -label ("Browse") -command browseFFmpeg ffmpeg_browse; 
		setParent..;

	rowLayout -numberOfColumns 2 
	    -adjustableColumn true
	    -columnAlign  1 "left"
	    -columnAlign  2 "right"
		-columnWidth 1 70
		-columnWidth 2 170
	    file_format_row;
		text -label "file format";
		textField -w 140 -tx $img_names -changeCommand setFileFormat file_format_field;
		setParent..;

	rowLayout -numberOfColumns 3 
	    -adjustableColumn true
	    -columnAlign  1 "left"
	    -columnAlign  2 "right"
		-columnWidth 1 50
		-columnWidth 2 110
	    source_row;
		text -label "Source";
		textField -tx $src_img_dir -changeCommand setSource source_field;
		button -label ("Browse") -command browseSource src_browse; 
		setParent..;

	rowLayout -numberOfColumns 3 
		-adjustableColumn true
		-columnAlign  1 "left"
		-columnAlign  2 "right"
		-columnWidth 1 50
		-columnWidth 2 110
		output_row;
		text -label "Output";
		textField -tx $out_mov_dir -changeCommand setOutput output_field;
		button -label ("Browse") -command browseOutput out_browse; 
		setParent..;

	rowLayout -numberOfColumns 2 
		-adjustableColumn true
		-columnAlign  1 "left"
		-columnAlign  2 "right"
		-columnWidth 1 150
		submit_row;
		checkBox -label "Subdirectories" -onCommand "set_subdirectories($src_img_dir)" -offCommand hide_subdirectories sub_checkbox;
		button -label ("Make Movie") -command "FFMpegSew" MMPegMovie; 
		setParent..;

    separator -w 280 sep;

		rowColumnLayout -numberOfColumns 2 
			-adjustableColumn true
			-columnWidth 2 200
			-columnAlign  1 "left"
			-columnAlign  2 "right"
			sub_layout;

	formLayout -edit
		-attachForm myRadBtnGrp "top" 20
		-attachForm myRadBtnGrp "left" 30
		-attachForm ffmpeg_row "top" 45
		-attachForm ffmpeg_row "left" 20
		-attachForm file_format_row "top" 80
		-attachForm file_format_row "left" 20
		-attachForm source_row "top" 117
		-attachForm source_row "left" 30
		-attachForm output_row "top" 150
		-attachForm output_row "left" 30
		-attachForm submit_row "top" 190
		-attachForm submit_row "left" 30
		-attachForm sep "top" 220
		-attachForm sep "left" 10
		-attachForm sub_layout "top" 250
		-attachForm sub_layout "left" -330
	ffmpeg_form;  

	showWindow FFMpegSewWindow; 
}  

global proc hide_subdirectories(){

	formLayout -edit
		-attachForm sub_layout "left" -330
	ffmpeg_form;  
	clear_subs();
}

global proc set_subdirectories (string $dir)
{
	global string $src_img_dir;
	if($src_img_dir == ""){
		checkBox -e -v 0 sub_checkbox;
		error "please select a source directory";
	}

	//getting subdirectories
	string $files[] = `getFileList -fld $dir`;
	string $out_files[] = {};
	for ($f in $files){
		string $f_path = $dir +"/" + $f;
		string $x = `filetest -d $f_path`;
		if($x){
			$out_files[size($out_files)] = $f;
		}
	}

	//creating and saving checkboxes, storing related subdirectories
	global string $sub_dir_cb[];
	global string $sub_dir_tf[];
	clear_subs();
	int $i = 0;
	for ($f in $out_files){
		string $f_no_spaces = substituteAllString($f, " ", "_");
		$f_no_spaces = substituteAllString($f_no_spaces, "-", "_");
		$f_no_spaces = substituteAllString($f_no_spaces, "(", "_");
		$f_no_spaces = substituteAllString($f_no_spaces, ")", "_");
		string $new_cb_name = ("sub_ch_"+$f_no_spaces);
		$sub_dir_cb[$i] = $new_cb_name;
		checkBox -label $f -v true $new_cb_name;
		$i = $i + 1;
	}
	formLayout -edit
		-attachForm sub_layout "left" 30
	ffmpeg_form;  
} 

global proc clear_subs(){
	global string $sub_dir_cb[];
	if(size($sub_dir_cb) > 0){
		for ($cb in $sub_dir_cb){
			deleteUI $cb;
		}
	}
	$sub_dir_cb = {};
}

global proc FFMpegSew() {
	string $FFMCombiner;
	global string $src_img_dir;
	global string $out_mov_dir;
	global string $ffmpeg_dir;
	global string $img_names;
	if($src_img_dir == "" || $out_mov_dir == ""){
		error "please select a source and output directory";
	}
	if($ffmpeg_dir == ""){
		error "please specify the location of ffmpeg.exe";
	}
	if($img_names == ""){
		error "please specify the format your file names will follow";
	}
	
	global string $ffmpeg_dir;
	string $ffmpeg = $ffmpeg_dir;

    if (`radioButtonGrp -q -select myRadBtnGrp` == 1) {
    	$ffmpeg = (`workspace -q -rd` + "scripts/ffmpeg/bin/ffmpeg.exe");
    }
    if (`radioButtonGrp -q -select myRadBtnGrp` == 2) {
    	$ffmpeg = (`workspace -q -rd` + "scripts/ffmpeg");
    }
    
	$ffmpeg = "C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe";

	string $ffmpeg_input_vars = " -r 12 -f image2 -s 1280x720 -i ";
	string $ffmpeg_output_vars = "-vcodec libx264 -pix_fmt yuv420p -crf 25";

	if(`checkBox -q -v sub_checkbox`){
		global string $sub_dir_cb[];
		string $ts_list = "";

		int $subidx = 0;
		for ($cb in $sub_dir_cb){
			if(`checkBox -q -v $cb`){
				string $curr_subdir = `checkBox -q -label $sub_dir_cb[$subidx]`;

				$ffmpeg_cmd = "shell " + $ffmpeg + $ffmpeg_input_vars + "\"" + $src_img_dir + "/" + $curr_subdir + "/" + $img_names + "\" "+ $ffmpeg_output_vars+" \"" + $src_img_dir + "/" + $curr_subdir + "/out.mp4\"";

				$cmd_out = system($ffmpeg_cmd);
				if($cmd_out != "") print $cmd_out;

				string $ts_path = $src_img_dir + "/" + $curr_subdir + "/temp.ts";

				$ffmpeg_temp_cmd = "shell "+$ffmpeg+" -i \""+$src_img_dir + "/" + $curr_subdir+"/out.mp4\" -c copy -bsf:v h264_mp4toannexb -f mpegts \"" + $ts_path + "\"";

				system($ffmpeg_temp_cmd);

				$ts_list = $ts_list + $ts_path +"|";

			}
			$subidx = $subidx + 1;
		}

		string $ffmpeg_combine_cmd = $ffmpeg + " -y -i \"concat:" + $ts_list + "\" -c copy -bsf:a aac_adtstoasc \"" + $out_mov_dir + "/Final.mp4\"";
		system($ffmpeg_combine_cmd);
		string $openMovieQuery = `confirmDialog -title "Confirm" -message "Open Movie?" -button "Yes" -button "No" -defaultButton "Yes" -cancelButton "No" -dismissString "No"`;
		if($openMovieQuery == "Yes"){
			print("\""+$out_mov_dir + "/Final.mp4\"");
			system("\""+$out_mov_dir + "/Final.mp4\"");
		}
		//may not have permissions to delete
		/*
		$subidx = 0;
		for ($cb in $sub_dir_cb){
			if(`checkBox -q -v $cb`){
				string $curr_subdir = `textField -q -tx $sub_dir_tf[$subidx]`;
				string $ts_path = "\""+$src_img_dir + "/" + $curr_subdir + "/temp.ts"+"\"";
				$ts_path = substituteAllString($ts_path, "/",  "\\");
				sysFile -delete ($ts_path);
				//system("shell del" + $ts_path);
			}
			$subidx = $subidx + 1;
		}
		*/
	}else{
		$ffmpeg_cmd = "shell " + $ffmpeg + $ffmpeg_input_vars + "\"" + $src_img_dir + "/" + $img_names + "\" "+ $ffmpeg_output_vars+" \"" + $out_mov_dir + "/out.mp4\"";
		$cmd_out = system($ffmpeg_cmd);
		if($cmd_out != "") print $cmd_out;
	}
 
 	//This deletes the temporary files created to sew them all together in mp4 format. 
	//for( $item in $scripts ){
	//	sysFile -delete ($s0x_movies + "temp" + $item + ".ts");
	//}
  }

// The below two global proc read in and write out settings to one file
global proc WriteSettings()
{
	global string $src_img_dir;
	global string $out_mov_dir;
	global string $ffmpeg_dir;
	global string $img_names;
	string $sub_checked = `checkBox -q -v sub_checkbox`;
	// Create A String Array With Test Data
	string $myStrArray[] =
	    {
	    "textField -e -text \"" + $ffmpeg_dir + "\" ffmpeg_field;",
	    "textField -e -text \"" + $img_names + "\" file_format_field;",
	    "textField -e -text \"" + $src_img_dir + "\" source_field;",
	    "textField -e -text \"" + $out_mov_dir + "\" output_field;"
	    };

	global string $sub_dir_cb[];
	for($cb in $sub_dir_cb){
		string $cb_v = `checkBox -q -v $cb`;
		print("checkBox -e -v " + $cb_v + " "+$cb+";");
		stringArrayInsertAtIndex(size($myStrArray), $myStrArray, "checkBox -e -v " + $cb_v + " "+$cb+";");
	}

    string $filePath = (`internalVar -usd` + "ffmpeg_stitch_Settings.txt") ;

	$fileId = `fopen $filePath "w"` ;

	// Print Array To File
	for($line in $myStrArray)
		fprint $fileId ($line+"\n") ;

	// Close File
	fclose $fileId ;
}

global proc ReadSettings()
{
	$filename = (`internalVar -usd` + "ffmpeg_stitch_Settings.txt");
	$fileId=`fopen $filename "r"`;
	string $nextLine = `fgetline $fileId`;
	while ( size( $nextLine ) > 0 ) {
	    // print ( $nextLine );
	    eval ($nextLine);
	    $nextLine = `fgetline $fileId`;
	}
	fclose $fileId;

}

FFMpegSewWindow;