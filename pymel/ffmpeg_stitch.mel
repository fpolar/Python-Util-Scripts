
global string $s01_images = "C:/";
global string $s01_movies = "C:/";
global string $src_field;
global string $sub_dir_cb[];
global string $sub_dir_tf[];


global proc setSource (string $src_text_field) 
{
	global string $s01_images;
	$s01_images = `textField -q -text source_field`;
}

global proc browseSource (string $src_text_field) 
{
	string $filenames[] = `fileDialog2 -rf true -fm 3`;
	textField -edit -text $filenames[0] source_field;
	setSource($src_text_field);
}

global proc setOutput (string $out_text_field) 
{
	global string $s01_movies;
	$s01_movies = `textField -q -text output_field`;
}

global proc browseOutput (string $out_text_field) 
{
	string $filenames[] = `fileDialog2 -rf true -fm 3`;
	textField -edit -text $filenames[0] output_field;
	setOutput($out_text_field);
}

global proc FFMpegSewWindow () 
{
	if (`window -exists "FFMpegSewWindow"`) deleteUI "FFMpegSewWindow";
	window -menuBar true  -title "FFMpegSewWindow" -widthHeight 300 200 FFMpegSewWindow;
	menu -label "File" -tearOff true;
	    menuItem -label "Load Settings";
	    menuItem -label "Save Settings";


	formLayout -numberOfDivisions 100 ffmpeg_form;

	global string $s01_images;
	$s01_images = "C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF";
	global string $s01_movies;
	$s01_movies = "C:/Users/theon/Documents/ffmpeg/";
	//assign correct image directory, check if valid, pop up if not

	text -w 100 ("Project: " + (basenameEx (`workspace -q -rd`)));

	radioButtonGrp
		-numberOfRadioButtons 2
		-label "Operating System :"
		-labelArray2 "PC" "OS"
		-select 1
	myRadBtnGrp;

	rowLayout -numberOfColumns 3 
	    -adjustableColumn true
	    -columnAlign  1 "left"
	    -columnAlign  2 "right"
	    source_row;
		text -label "Source";
		$src_field = `textField source_field`;
		button -label ("Browse") -command "browseSource($src_field)" src_browse; 
		setParent..;

	rowLayout -numberOfColumns 3 
		-adjustableColumn true
		-columnAlign  1 "left"
		-columnAlign  2 "right"
		output_row;
		text -label "Output";
		string $out_field = `textField output_field`;
		button -label ("Browse") -command "browseOutput($out_field)" out_browse; 
		setParent..;

	rowLayout -numberOfColumns 2 
		-adjustableColumn true
		-columnAlign  1 "left"
		-columnAlign  2 "right"
		submit_row;
		checkBox -label "Subdirectories" -changeCommand "set_subdirectories($s01_images)";
		button -label ("Make Movie") -command "FFMpegSew" MMPegMovie; 
		setParent..;

    separator -w 280 sep;

	formLayout -edit
		-attachForm myRadBtnGrp "top" 20
		-attachForm myRadBtnGrp "left" -20
		-attachForm source_row "top" 40
		-attachForm source_row "left" 20
		-attachForm output_row "top" 70
		-attachForm output_row "left" 20
		-attachForm submit_row "top" 100
		-attachForm submit_row "left" 20
		-attachForm sep "top" 140
		-attachForm sep "left" 10
	ffmpeg_form;  

	showWindow FFMpegSewWindow; 
}  

//TODO rewrite ffmpeg scripts Scott Provided

global proc set_subdirectories (string $dir)
{
	if (`layout -exists sub_layout`){
		deleteUI sub_layout;
	} else{
		rowColumnLayout -numberOfColumns 2 
			-adjustableColumn true
			-columnAlign  1 "left"
			-columnAlign  2 "right"
			sub_layout;

		formLayout -edit
			-attachForm sub_layout "top" 160
			-attachForm sub_layout "left" 10
		ffmpeg_form;  

		string $files[] = `getFileList -fld $dir`;
		string $out_files[] = {};
		for ($f in $files){
			string $f_path = $dir +"/" + $f;
			string $x = `filetest -d $f_path`;
			if($x){
				$out_files[size($out_files)] = $f;
			}
		}

		global string $sub_dir_cb[];
		global string $sub_dir_tf[];
		int $i = 0;
		for ($f in $out_files){
			string $new_cb_name = ("sub_ch_"+$i);
			string $new_tf_name = ("sub_tf_"+$i);
			string $disable_cmd = "textField -edit -enable false "+ $new_tf_name;
			string $enable_cmd = "textField -edit -enable true "+ $new_tf_name;
			$sub_dir_cb[$i] = $new_cb_name;
			$sub_dir_tf[$i] = $new_tf_name;
			checkBox -label " " -v true -offCommand $disable_cmd -onCommand $enable_cmd $new_cb_name;
			textField -text $f $new_tf_name;
			$i = $i + 1;
		}
	}
} 

global proc FFMpegSew() {
	string $FFMCombiner;
	global string $s01_images;
	global string $s01_movies;
	global string $sub_dir_cb[];
	global string $sub_dir_tf[];
	
	print "\START\n";
	string $ffmpeg = "C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe";

    if (`radioButtonGrp -q -select myRadBtnGrp` == 1) {
    	$ffmpeg = (`workspace -q -rd` + "scripts/ffmpeg/bin/ffmpeg.exe");
    }
    if (`radioButtonGrp -q -select myRadBtnGrp` == 2) {
    	$ffmpeg = (`workspace -q -rd` + "scripts/ffmpeg");
    }
    
	$ffmpeg = "C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe";

	$s0x_images = (`workspace -q -rd` + "images/");
	$s0x_movies = (`workspace -q -rd` + "movies/");

	string $ffvariables = "-vcodec libx264 -vf scale=640:-2,format=yuv420p ";
	string $TEMPcombinevariables = " -c copy -bsf:v h264_mp4toannexb -f mpegts ";
	string $scripts[] = `getFileList -folder $s0x_images -filespec "*.png"`;
	
	//system("load C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF/FF1.tif");

	$cmd_out = system("shell C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe -r 12 -f image2 -s 1920x1080 -i \"C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF/FF%d.tif\" -vcodec libx264 -crf 25 -pix_fmt yuv420p \"C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF/test.mp4\"");

	//C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe -r 12 -f image2 -s 1920x1080 -i "C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF/FF%d.tif" -vcodec libx264 -crf 25 -pix_fmt yuv420p "C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF/test.mp4"

	/*for( $item in $scripts )
	{
		print $scripts;
		print $ffmpeg;
		// turns images into movies
        string $out = system ("start C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe -r 12 -f image2 -s 1920x1080 -i FF%d.tif -vcodec libx264 -crf 25 -pix_fmt yuv420p C:/Users/theon/Documents/Art/romance dawn/3D/images/clearFF/test.mp4 ");
        print $out;
        print "x";

       //C:/Users/theon/Documents/ffmpeg/bin/ffmpeg.exe -r 12 -f image2 -s 1920x1080 -i FF%d.tif -vcodec libx264 -crf 25 -pix_fmt yuv420p test.mp4 

       // creating temp movie files in preparation for mmpeg to string them together (necessary step for lossless .mp4 combining)
        //system ($ffmpeg + " -y -i " + $s0x_movies + $item + ".mp4 " + $TEMPcombinevariables + $s0x_movies + "temp" + $item + ".ts");

        // This dynamically adds each clip to the big combiner below. 
        //$FFMCombiner = (($FFMCombiner) + $s0x_movies + "temp" + $item + ".ts|");
	}*/

	print "\nEND\n";
	// The Big Combiner - bringing all temp files into one movie 
	//system ($ffmpeg + " -y -i \"concat:" + $FFMCombiner + "\" -c copy -bsf:a aac_adtstoasc " + $s0x_movies + "Final.mp4"); 
 
 	//This deletes the temporary files created to sew them all together in mp4 format. 
	//for( $item in $scripts ){
	//	sysFile -delete ($s0x_movies + "temp" + $item + ".ts");
	//}
  }

FFMpegSewWindow;